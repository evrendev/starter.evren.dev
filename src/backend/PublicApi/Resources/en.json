{
  "api.item-not-found": "Item not found",
  "api.unauthorized": "You must be logged in",
  "api.forbidden": "You are not authorized to perform this action",
  "api.validations.failed": "Validation failed",
  "api.predefined-values.gender.none": "None",
  "api.predefined-values.gender.mrs": "Mrs",
  "api.predefined-values.gender.mr": "Mr",
  "api.predefined-values.languages.tr": "Turkish",
  "api.predefined-values.languages.en": "English",
  "api.predefined-values.languages.de": "German",
  "api.auth.login.not-found": "User account not found",
  "api.auth.login.deleted": "User account has been deleted",
  "api.auth.login.invalid-credentials": "Invalid credentials",
  "api.auth.login.invalid-tenant": "Invalid tenant",
  "api.auth.login.email.required": "Email is required",
  "api.auth.login.email.invalid": "Invalid email",
  "api.auth.login.password.required": "Password is required",
  "api.auth.refresh-token.invalid": "Invalid refresh token",
  "api.auth.refresh-token.not-found": "User account not found",
  "api.auth.refresh-token.deleted": "User account has been deleted",
  "api.auth.refresh-token.user-id.required": "User ID is required",
  "api.auth.refresh-token.refresh-token.required": "Refresh token is required",
  "api.auth.register.email.required": "Email is required",
  "api.auth.register.email.invalid": "Invalid email",
  "api.auth.register.email.exists": "Email already exists",
  "api.auth.register.email.maxlength": "Email must be at most 500 characters",
  "api.auth.register.password.complexity": "Password must contain at least one uppercase letter, one lowercase letter, one number and one special character",
  "api.auth.register.password.equality": "Passwords do not match",
  "api.auth.register.first-name.required": "First name is required",
  "api.auth.register.first-name.maxlength": "First name must be at most 50 characters",
  "api.auth.register.last-name.required": "Last name is required",
  "api.auth.register.last-name.maxlength": "Last name must be at most 50 characters",
  "api.auth.register.tenant-id.required": "Tenant ID is required",
  "api.roles.not-found": "Role not found",
  "api.roles.update.id-required": "Role ID is required",
  "api.roles.update.name.required": "Role name is required",
  "api.roles.update.name.maxlength": "Role name must be at most 50 characters",
  "api.roles.update.name.exists": "Role name already exists",
  "api.roles.update.permissions-required": "Role permissions are required",
  "api.roles.delete.id-required": "Role ID is required",
  "api.roles.create.name.required": "Role name is required",
  "api.roles.create.name.maxlength": "Role name must be at most 50 characters",
  "api.todo-lists.not-found": "Todo list not found",
  "api.todo-lists.create.title.required": "Title is required",
  "api.todo-lists.create.title.maxlength": "Title must be at most 200 characters",
  "api.todo-lists.create.colour.invalid": "Invalid colour code",
  "api.todo-lists.update.id.required": "Todo list ID is required",
  "api.todo-lists.update.title.required": "Title is required",
  "api.todo-lists.update.title.maxlength": "Title must be at most 200 characters",
  "api.todo-lists.update.colour.invalid": "Invalid colour code",
  "api.todo-lists.delete.id.required": "Todo list ID is required",
  "api.todo-lists.get.id.required": "Todo list ID is required",
  "api.tenants.not-found": "Tenant not found",
  "api.tenants.create.name.required": "Name is required",
  "api.tenants.create.name.maxlength": "Name must be at most 200 characters",
  "api.tenants.create.connection-string.required": "Connection string is required",
  "api.tenants.create.connection-string.maxlength": "Connection string must be at most 500 characters",
  "api.tenants.create.host.required": "Host is required",
  "api.tenants.create.host.maxlength": "Host must be at most 200 characters",
  "api.tenants.update.id.required": "Tenant ID is required",
  "api.tenants.update.name.required": "Name is required",
  "api.tenants.update.name.maxlength": "Name must be at most 200 characters",
  "api.tenants.update.connection-string.required": "Connection string is required",
  "api.tenants.update.connection-string.maxlength": "Connection string must be at most 500 characters",
  "api.tenants.update.host.required": "Host is required",
  "api.tenants.update.host.maxlength": "Host must be at most 200 characters",
  "api.tenants.delete.id.required": "Tenant ID is required",
  "api.tenants.get.id.required": "Tenant ID is required",
  "api.users.not-found": "User not found",
  "api.users.create.email.required": "Email is required",
  "api.users.create.email.invalid": "Invalid email",
  "api.users.create.email.exists": "Email already exists",
  "api.users.create.password.required": "Password is required",
  "api.users.create.password.minlength": "Password must be at least 8 characters",
  "api.users.create.password.uppercase": "Password must contain at least one uppercase letter",
  "api.users.create.password.lowercase": "Password must contain at least one lowercase letter",
  "api.users.create.password.number": "Password must contain at least one number",
  "api.users.create.password.special": "Password must contain at least one special character",
  "api.users.create.first-name.required": "First name is required",
  "api.users.create.first-name.maxlength": "First name must be at most 100 characters",
  "api.users.create.last-name.required": "Last name is required",
  "api.users.create.last-name.maxlength": "Last name must be at most 100 characters",
  "api.users.create.tenant-id.required": "Tenant ID is required",
  "api.users.update.id.required": "User ID is required",
  "api.users.update.email.required": "Email is required",
  "api.users.update.email.invalid": "Invalid email",
  "api.users.update.email.exists": "Email already exists",
  "api.users.update.first-name.required": "First name is required",
  "api.users.update.first-name.maxlength": "First name must be at most 100 characters",
  "api.users.update.last-name.required": "Last name is required",
  "api.users.update.last-name.maxlength": "Last name must be at most 100 characters",
  "api.users.update.tenant-id.required": "Tenant ID is required",
  "api.users.update-permissions.id.required": "User ID is required",
  "api.users.update-permissions.permissions.required": "Permissions are required",
  "api.users.delete.id.required": "User ID is required",
  "api.users.get.id.required": "User ID is required",
  "api.auth.2fa.user-not-found": "User not found",
  "api.auth.2fa.invalid-code": "Invalid verification code",
  "api.auth.2fa.disable-failed": "Failed to disable 2FA",
  "api.auth.2fa.required": "2FA code is required",
  "api.auth.forgot-password.email.required": "Email is required",
  "api.auth.forgot-password.email.invalid": "Email is invalid",
  "api.auth.forgot-password.email.subject": "Password Reset Request",
  "api.auth.forgot-password.email.body": "Please use the following token to reset your password: {0}",
  "api.auth.forgot-password.email-sent": "If an account exists with this email, a password reset link has been sent",
  "api.auth.forgot-password.email-failed": "Failed to send password reset email",
  "api.auth.reset-password.email.required": "Email is required",
  "api.auth.reset-password.email.invalid": "Email is invalid",
  "api.auth.reset-password.token.required": "Reset token is required",
  "api.auth.reset-password.password.required": "New password is required",
  "api.auth.reset-password.password.minlength": "Password must be at least 8 characters",
  "api.auth.reset-password.password.uppercase": "Password must contain at least one uppercase letter",
  "api.auth.reset-password.password.lowercase": "Password must contain at least one lowercase letter",
  "api.auth.reset-password.password.number": "Password must contain at least one number",
  "api.auth.reset-password.password.special": "Password must contain at least one special character",
  "api.auth.reset-password.success": "Password has been reset successfully",
  "api.donations.fontain.create.contact.require": "Contact is required",
  "api.donations.fontain.create.contact.maxlength": "Contact is at most 100 characters",
  "api.donations.fontain.create.phone.require": "Phone is required",
  "api.donations.fontain.create.phone.maxlength": "Phone is at most 100 characters",
  "api.donations.fontain.create.banner.require": "Banner is required",
  "api.donations.fontain.create.banner.maxlength": "Banner is at most 1000 characters",
  "api.donations.fontain.create.project-code.require": "Project code is required",
  "api.donations.fontain.create.project-code.invalid": "Project code is invalid",
  "api.donations.fontain.create.creation-date.require": "Creation Date is required"
}
